# Generated by Django 2.0.13 on 2019-04-02 20:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common_data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Borough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(max_length=256, verbose_name='Description')),
                ('is_active', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManagementType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(max_length=256, verbose_name='Description')),
                ('is_active', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegionalDirector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(max_length=256, verbose_name='Description')),
                ('abbreviation', models.CharField(max_length=4, verbose_name='Abbreviation')),
            ],
            options={
                'verbose_name': 'Regional Director',
                'verbose_name_plural': 'Regional Directors',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(max_length=256, verbose_name='Description')),
                ('is_active', models.BooleanField(verbose_name='Active')),
                ('eol_code', models.CharField(max_length=6, verbose_name='EOL code')),
                ('codae_code', models.CharField(max_length=6, verbose_name='CODAE code')),
                ('grouping', models.SmallIntegerField(verbose_name='Grouping')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common_data.Address')),
                ('borough', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='school.Borough')),
                ('management_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='school.ManagementType')),
                ('regional_director', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='school.RegionalDirector')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolUnitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(max_length=256, verbose_name='Description')),
                ('is_active', models.BooleanField(verbose_name='Active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='school',
            name='unit_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='school.SchoolUnitType'),
        ),
    ]
