# Generated by Django 2.0.13 on 2019-08-26 18:04

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sme_terceirizadas.perfil.models.usuario
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(max_length=150, verbose_name='name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'abstract': False,
            },
            managers=[
                ('objects', sme_terceirizadas.perfil.models.usuario.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GrupoPerfil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descricao')),
                ('nome', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Está ativo?')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'verbose_name': 'Grupo de perfil',
                'verbose_name_plural': 'Grupos de perfis',
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descricao')),
                ('nome', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Está ativo?')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='perfis', to='perfil.GrupoPerfil')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
            },
        ),
        migrations.CreateModel(
            name='PerfilPermissao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acoes', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Cria'), (1, 'Visualiza'), (3, 'Edita'), (2, 'Cancela'), (4, 'Recebe'), (5, 'Fica ciente'), (6, 'Ciente após autorização')], default=[], null=True), size=None)),
                ('perfil', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='perfil.Perfil')),
            ],
        ),
        migrations.CreateModel(
            name='Permissao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Está ativo?')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'verbose_name': 'Permissão',
                'verbose_name_plural': 'Permissões',
            },
        ),
        migrations.AddField(
            model_name='perfilpermissao',
            name='permissao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='perfil.Permissao'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='perfis',
            field=models.ManyToManyField(to='perfil.Perfil'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
